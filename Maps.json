[{"id":"e9b0ec89.58cc7","type":"tab","label":"Siddharth_Flow","disabled":false,"info":""},{"id":"6ff1a07d.16247","type":"http in","z":"e9b0ec89.58cc7","name":"","url":"/simple","method":"get","upload":false,"swaggerDoc":"","x":130,"y":120,"wires":[["2e969078.c08e2"]]},{"id":"2e969078.c08e2","type":"template","z":"e9b0ec89.58cc7","name":"html","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<h1>Upload the file containing images of your bicycle also the issued documents related to it </h1>\n\n<form action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\">\n    <input type=\"file\" name=\"myFile\" />\n    <input type=\"submit\" value=\"Submit\">\n</form>","output":"str","x":470,"y":120,"wires":[["e11603ba.ec7c4"]]},{"id":"e11603ba.ec7c4","type":"http response","z":"e9b0ec89.58cc7","name":"","x":610,"y":120,"wires":[]},{"id":"f25ca27b.c64ff","type":"comment","z":"e9b0ec89.58cc7","name":"Simple","info":"","x":110,"y":80,"wires":[]},{"id":"ba887553.cb3198","type":"http response","z":"e9b0ec89.58cc7","name":"","x":610,"y":180,"wires":[]},{"id":"95836dbb.19ba3","type":"http in","z":"e9b0ec89.58cc7","name":"","url":"/upload","method":"post","upload":true,"swaggerDoc":"","x":130,"y":180,"wires":[["8d1cf940.284028"]]},{"id":"87453351.1533","type":"template","z":"e9b0ec89.58cc7","name":"html","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<p></p>File {{name}} uploaded !</p>\n\n<h2>Contents:</h2>\n\n<pre>\n{{{payload}}}\n</pre>","output":"str","x":470,"y":180,"wires":[["ba887553.cb3198"]]},{"id":"8d1cf940.284028","type":"function","z":"e9b0ec89.58cc7","name":"toBase64","func":"msg.name = msg.req.files[0].originalname;\n\nif (msg.req.files[0].mimetype.includes('image')) {\n    msg.payload = `<img src=\"data:image/gif;base64,${msg.req.files[0].buffer.toString('base64')}\">`;\n} else {\n    msg.payload = msg.req.files[0].buffer.toString();\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":180,"wires":[["87453351.1533"]]},{"id":"7fc59aeb.b8e574","type":"ui_template","z":"e9b0ec89.58cc7","group":"7c888b01.5f3ad4","name":"HOSPITAL","order":0,"width":"8","height":"13","format":"<html>\n<style>\n    /* Always set the map height explicitly to define the size of the div\n * element that contains the map. */\n#map {\n  height: 100%;\n}\n/* Optional: Makes the sample page fill the window. */\nhtml, body {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n#right-panel {\n  font-family: 'Roboto','sans-serif';\n  line-height: 30px;\n  padding-left: 10px;\n  color:black;\n}\n\n#right-panel select, #right-panel input {\n  font-size: 15px;\n}\n\n#right-panel select {\n  width: 100%;\n}\n\n#right-panel i {\n  font-size: 12px;\n}\n#right-panel {\n  font-family: Arial, Helvetica, sans-serif;\n  position: absolute;\n  right: 5px;\n  top: 70%;\n  margin-top: -195px;\n  height: 320px;\n  width: 180px;\n  padding: 5px;\n  z-index: 5;\n  border: 1px solid #999;\n  background: #fff;\n}\nh2 {\n  font-size: 22px;\n  margin: 0 0 5px 0;\n}\nul {background-color: white;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  height: 271px;\n  width: 200px;\n  overflow-y: scroll;\n}\nli {\n  background-color: #f1f1f1;\n  padding: 10px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;opacity: 0.8;\n}\nli:nth-child(odd) {\n  background-color: #fcfcfc;opacity: 0.8;\n}\n#more {\n  width: 100%;\n  margin: 5px 0 0 0;\n}\n</style>\n<script>\n    var lati;\nvar lon;\nvar map;\nvar x = document.getElementById(\"demo\");\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  } else { \n    x.innerHTML = \"Geolocation is not supported by this browser.\";\n  }\n}\n  \n\nfunction showPosition(position) {\n   lati= position.coords.latitude; \n   lon= position.coords.longitude;\n   initMap();\n}\n\nfunction initMap() {\n  // Create the map.\n  var x = lati;\n  var y=lon;\n  var pyrmont = {lat: x, lng: y};\n  map = new google.maps.Map(document.getElementById('map'), {\n    center: pyrmont,\n    zoom: 17\n  });\n\n  // Create the places service.\n  var service = new google.maps.places.PlacesService(map);\n  var getNextPage = null;\n  var moreButton = document.getElementById('more');\n  moreButton.onclick = function() {\n    moreButton.disabled = true;\n    if (getNextPage) getNextPage();\n  };\n\n  // Perform a nearby search.\n  service.nearbySearch(\n      {location: pyrmont, radius: 500, type: ['hospital']},\n      function(results, status, pagination) {\n        if (status !== 'OK') return;\n\n        createMarkers(results);\n        moreButton.disabled = !pagination.hasNextPage;\n        getNextPage = pagination.hasNextPage && function() {\n          pagination.nextPage();\n        };\n      });\ninit();}\n\nfunction createMarkers(places) {\n  var bounds = new google.maps.LatLngBounds();\n  var placesList = document.getElementById('places');\n\n  for (var i = 0, place; place = places[i]; i++) {\n    var image = {\n      url: \"https://cdn4.iconfinder.com/data/icons/hospital-and-medical-v2/512/hospital_place_pin_map_location-512.png\",\n      size: new google.maps.Size(71, 71),\n      origin: new google.maps.Point(0, 0),\n      anchor: new google.maps.Point(17, 34),\n      scaledSize: new google.maps.Size(25, 25)\n    };\n\n    var marker = new google.maps.Marker({\n      map: map,\n      icon: image,\n      title: place.name,\n      position: place.geometry.location\n    });\n\n    var li = document.createElement('li');\n    li.textContent = place.name;\n    placesList.appendChild(li);\n\n    bounds.extend(place.geometry.location);\n  }\n  map.fitBounds(bounds);\n}\n\n\n</script>\n<body>\n\n<p><font color='#0ECFD5'>Click the button to get nearby Hospital.</font></p>\n\n<button onclick=\"getLocation()\">Locate Yourself</button>\n\n<p id=\"demo\"></p>\n\n<div id=\"map\"></div>\n<div id=\"right-panel\">\n  <h2><font color='#DD0E42'>Results</font></h2>\n  <ul id=\"places\"></ul>\n  <button id=\"more\">More results</button>\n</div>\n<!-- Replace the value of the key parameter with your own API key. -->\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDHFx21DUmGzak8iDuNrkh15C_gKB0_41w&libraries=places&callback=initMap\" async defer></script>\n<script>\n \nconst createMap = ({ lat, lng }) => {\n  return new google.maps.Map(document.getElementById('map'), {\n    center: { lat, lng },\n    zoom: 10\n  });\n};\nconst createMarker = ({ map, position }) => {\n  return new google.maps.Marker({ map, position });\n};\n\n/**\n * Track the user location.\n * @param {Object} onSuccess\n * @param {Object} [onError]\n * @return {number}\n */\nconst trackLocation = ({ onSuccess, onError = () => { } }) => {\n  if ('geolocation' in navigator === false) {\n    return onError(new Error('Geolocation is not supported by your browser.'));\n  }\n\n  return navigator.geolocation.watchPosition(onSuccess, onError, {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0\n  });\n};\n\n/**\n * Get position error message from the given error code.\n * @param {number} code\n * @return {String}\n */\nconst getPositionErrorMessage = code => {\n  switch (code) {\n    case 1:\n      return 'Permission denied.';\n    case 2:\n      return 'Position unavailable.';\n    case 3:\n      return 'Timeout reached.';\n  }\n}\n\n/**\n * Initialize the application.\n * Automatically called by the google maps API once it's loaded.\n*/\nfunction init() {\n     \n  const initialPosition = { lat: 59.32, lng: 17.84 };\n//   const map = createMap(initialPosition);\n  const marker = createMarker({ map, position: initialPosition });\n  const $info = document.getElementById('info');\n\n  let watchId = trackLocation({\n    onSuccess: ({ coords: { latitude: lat, longitude: lng } }) => {\n      marker.setPosition({ lat, lng });\n      map.panTo({ lat, lng });\n      $info.textContent = `Lat: ${lat.toFixed(5)} Lng: ${lng.toFixed(5)}`;\n      $info.classList.remove('error');\n    },\n    onError: err => {\n      console.log($info);\n      $info.textContent = `Error: ${err.message || getPositionErrorMessage(err.code)}`;\n      $info.classList.add('error');\n    }\n  });\n}\n</script>\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":350,"y":240,"wires":[[]]},{"id":"7fccfb1a.abf674","type":"ui_template","z":"e9b0ec89.58cc7","group":"140907ca.3b0dc8","name":"HOME","order":0,"width":"8","height":"15","format":"<!DOCTYPE html>\n<html>\n<body>\n<h2><font color='#DD0E42'>Get Latest Update of Corona here</font></h2>\n\n<iframe src=\"https://timesofindia.indiatimes.com/coronavirus\" width=\"100%\" height=\"100%\" title=\"get updates here\">\n</iframe>\n\n</body>\n</html>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":250,"y":300,"wires":[[]]},{"id":"15a2702c.40811","type":"function","z":"e9b0ec89.58cc7","name":"cloud","func":"msg.payload={\n    '_id':msg.payload.name,\n    'name':msg.payload.name,\n    'add':msg.payload.add,\n    'mob':msg.payload.mob,\n    'mod':msg.payload.mod\n    \n    \n    \n};\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":399,"wires":[["3e5f00a9.251e5"]]},{"id":"3e5f00a9.251e5","type":"cloudant out","z":"e9b0ec89.58cc7","name":"","cloudant":"","database":"ibmproject","service":"node-red-pmqsl-cloudant-1590503778304-40801","payonly":true,"operation":"insert","x":350,"y":459,"wires":[]},{"id":"6f607689.cac778","type":"ui_form","z":"e9b0ec89.58cc7","name":"","label":"","group":"1c41e47f.2d9bdc","order":3,"width":"8","height":"23","options":[{"label":"Name of the bicycle owner ","value":"nam","type":"text","required":true,"rows":null},{"label":"Address ","value":"add","type":"text","required":true,"rows":null},{"label":"Mobile number","value":"mob","type":"number","required":true,"rows":null},{"label":"Model of the bicycle ","value":"mod","type":"text","required":true,"rows":null}],"formValue":{"nam":"","add":"","mob":"","mod":""},"payload":"","submit":"submit","cancel":"cancel","topic":"","x":70,"y":439,"wires":[["15a2702c.40811","66f8d470.281cbc"]]},{"id":"66f8d470.281cbc","type":"function","z":"e9b0ec89.58cc7","name":"","func":"msg.payload=\"Your details have been recorded successfully...\"\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":520,"wires":[["a50a2959.8014a8"]]},{"id":"a50a2959.8014a8","type":"ui_text","z":"e9b0ec89.58cc7","group":"1c41e47f.2d9bdc","order":18,"width":"0","height":"0","name":"","label":"","format":"{{msg.payload}}","layout":"row-left","x":550,"y":539,"wires":[]},{"id":"2183e5c5.c16e5a","type":"ui_template","z":"e9b0ec89.58cc7","group":"1c41e47f.2d9bdc","name":"CycleRegistration","order":19,"width":"8","height":"13","format":"<html>\n    <body>\n    <script>\n    function fill_(){\n    var conVal = prompt(\"Thank you to show interest.Time at which we can contact you \");\n\t\tif (conVal != null)\n\t\t{\n\t\t\tval = \"WE will contact you at \"+conVal+'! Have a time';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tval = \"Please! enter time\";\n\t\t}\n\t\talert(val);\n    }\n    </script>\n<button onclick='fill_()'>Confirm_Registration</button>\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":110,"y":240,"wires":[[]]},{"id":"fef150ce.2da2","type":"ui_template","z":"e9b0ec89.58cc7","group":"6ecdbb2a.a34d24","name":"Cycle Stands","order":1,"width":"8","height":"13","format":"<html>\n<style>\n    #map {\n  height: 100%;\n}\n/* Optional: Makes the sample page fill the window. */\nhtml, body {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n#right-panel {\n  font-family: Arial, Helvetica, sans-serif;\n  position: absolute;\n  right: 5px;\n  top: 70%;\n  margin-top: -195px;\n  height: 320px;\n  width: 180px;\n  padding: 5px;\n  z-index: 5;\n  border: 1px solid #999;\n  background: #fff;color:black;\n}\n</style>\n<script>\n    // The following example creates complex markers to indicate beaches near\n// Sydney, NSW, Australia. Note that the anchor is set to (0,32) to correspond\n// to the base of the flagpole.\n var lati;\nvar lon;\n\nvar x = document.getElementById(\"demo\");\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  } else { \n    x.innerHTML = \"Geolocation is not supported by this browser.\";\n  }\n}\n  \n\nfunction showPosition(position) {\n   lati= position.coords.latitude; \n   lon= position.coords.longitude;\n   initMap();\n}\n\nfunction initMap() {\n var x = lati;\n  var y=lon;\n  var LatLng = {lat: x, lng: y};\n \n  var map = new google.maps.Map(document.getElementById('map'), {\n    zoom: 8,\n    center: LatLng\n  });\n  var marker = new google.maps.Marker({\n    position: LatLng,\n    map: map,\n    title: 'Hello World!'\n  });\n\n  setMarkers(map);\n}\n\n// Data for the markers consisting of a name, a LatLng and a zIndex for the\n// order in which these markers should display on top of each other.\nvar beaches = [\n  ['INDORE', 22.719568, 75.857727, 3],\n  ['BARWAH', 22.246639, 76.001541, 2],\n  ['RATLAM', 23.331511, 75.043708, 1],\n \n];\n\nfunction setMarkers(map) {\n  // Adds markers to the map.\n\n  // Marker sizes are expressed as a Size of X,Y where the origin of the image\n  // (0,0) is located in the top left of the image.\n\n  // Origins, anchor positions and coordinates of the marker increase in the X\n  // direction to the right and in the Y direction down.\n  var image = {\n    url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\n    // This marker is 20 pixels wide by 32 pixels high.\n    size: new google.maps.Size(20, 32),\n    // The origin for this image is (0, 0).\n    origin: new google.maps.Point(0, 0),\n    // The anchor for this image is the base of the flagpole at (0, 32).\n    anchor: new google.maps.Point(0, 32)\n  };\n  // Shapes define the clickable region of the icon. The type defines an HTML\n  // <area> element 'poly' which traces out a polygon as a series of X,Y points.\n  // The final coordinate closes the poly by connecting to the first coordinate.\n  var shape = {\n    coords: [1, 1, 1, 20, 18, 20, 18, 1],\n    type: 'poly'\n  };\n  for (var i = 0; i < beaches.length; i++) {\n    var beach = beaches[i];\n    var marker = new google.maps.Marker({\n      position: {lat: beach[1], lng: beach[2]},\n      map: map,\n      icon: image,\n      shape: shape,\n      title: beach[0],\n      zIndex: beach[3]\n    });\n  }\n}\n</script>\n<body>\n    <p><font color='#0ECFD5'>Click the button to get nearby Cycle Stands.</font></p>\n\n<button onclick=\"getLocation()\">click here</button>\n\n<p id=\"demo\"></p>\n\n<div id=\"map\"></div>\n\n\n\n\n<script async defer\nsrc=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDHFx21DUmGzak8iDuNrkh15C_gKB0_41w&callback=initMap\">\n</script>\n</body>\n</html>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":310,"y":60,"wires":[[]]},{"id":"7d542e78.06873","type":"ui_template","z":"e9b0ec89.58cc7","group":"cac3ba20.c7ac98","name":"TRANSPORT","order":0,"width":"8","height":"13","format":"\n<html>\n<body>\n\n<p><font color='#0ECFD5'>Get route of places.</font></p>\n\n\n\n<p id=\"demo\"></p>\n<div style=\"display: none\">\n    <input id=\"origin-input\" class=\"controls\" type=\"text\"\n        placeholder=\"Enter an origin location\">\n\n    <input id=\"destination-input\" class=\"controls\" type=\"text\"\n        placeholder=\"Enter a destination location\">\n\n    <div id=\"mode-selector\" class=\"controls\">\n      <input type=\"radio\" name=\"type\" id=\"changemode-walking\" checked=\"checked\">\n      <label for=\"changemode-walking\">Walking</label>\n\n      <input type=\"radio\" name=\"type\" id=\"changemode-transit\">\n      <label for=\"changemode-transit\">Transit</label>\n\n      <input type=\"radio\" name=\"type\" id=\"changemode-driving\">\n      <label for=\"changemode-driving\">Driving</label>\n    </div>\n</div>\n<style>\n    /* Always set the map height explicitly to define the size of the div\n * element that contains the map. */\n#map {\n  height: 100%;\n}\n/* Optional: Makes the sample page fill the window. */\nhtml, body {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n.controls {\n  margin-top: 10px;\n  border: 1px solid transparent;\n  border-radius: 2px 0 0 2px;\n  box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  height: 32px;\n  outline: none;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n}\n\n#origin-input,\n#destination-input {\n  background-color: #fff;\n  font-family: Roboto;\n  font-size: 15px;\n  font-weight: 300;\n  margin-left: 12px;\n  padding: 0 11px 0 13px;\n  text-overflow: ellipsis;\n  width: 200px;\n}\n\n#origin-input:focus,\n#destination-input:focus {\n  border-color: #4d90fe;\n}\n\n#mode-selector {\n  color: #fff;\n  background-color: #4d90fe;\n  margin-left: 12px;\n  padding: 5px 11px 0px 11px;\n}\n\n#mode-selector label {\n  font-family: Roboto;\n  font-size: 13px;\n  font-weight: 300;\n}\n</style>\n<script>\n    // This example requires the Places library. Include the libraries=places\n// parameter when you first load the API. For example:\n// <script\n// src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\nvar lati;\nvar lon;\nvar x = document.getElementById(\"demo\");\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  } else { \n    x.innerHTML = \"Geolocation is not supported by this browser.\";\n  }\n}\n  \n\nfunction showPosition(position) {\n   lati= position.coords.latitude; \n   lon= position.coords.longitude;\n   initMap();\n}\n\nfunction initMap() {\n  var x = lati;\n  var y=lon;\n  var map = new google.maps.Map(document.getElementById('map'), {\n    mapTypeControl: false,\n    \n    center: {lat: x, lng: y},\n    zoom: 13\n  });\n\n  new AutocompleteDirectionsHandler(map);\n}\n\n/**\n * @constructor\n */\nfunction AutocompleteDirectionsHandler(map) {\n  this.map = map;\n  this.originPlaceId = null;\n  this.destinationPlaceId = null;\n  this.travelMode = 'WALKING';\n  this.directionsService = new google.maps.DirectionsService;\n  this.directionsRenderer = new google.maps.DirectionsRenderer;\n  this.directionsRenderer.setMap(map);\n\n  var originInput = document.getElementById('origin-input');\n  var destinationInput = document.getElementById('destination-input');\n  var modeSelector = document.getElementById('mode-selector');\n\n  var originAutocomplete = new google.maps.places.Autocomplete(originInput);\n  // Specify just the place data fields that you need.\n  originAutocomplete.setFields(['place_id']);\n\n  var destinationAutocomplete =\n      new google.maps.places.Autocomplete(destinationInput);\n  // Specify just the place data fields that you need.\n  destinationAutocomplete.setFields(['place_id']);\n\n  this.setupClickListener('changemode-walking', 'WALKING');\n  this.setupClickListener('changemode-transit', 'TRANSIT');\n  this.setupClickListener('changemode-driving', 'DRIVING');\n\n  this.setupPlaceChangedListener(originAutocomplete, 'ORIG');\n  this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');\n\n  this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);\n  this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(\n      destinationInput);\n  this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);\n}\n\n// Sets a listener on a radio button to change the filter type on Places\n// Autocomplete.\nAutocompleteDirectionsHandler.prototype.setupClickListener = function(\n    id, mode) {\n  var radioButton = document.getElementById(id);\n  var me = this;\n\n  radioButton.addEventListener('click', function() {\n    me.travelMode = mode;\n    me.route();\n  });\n};\n\nAutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(\n    autocomplete, mode) {\n  var me = this;\n  autocomplete.bindTo('bounds', this.map);\n\n  autocomplete.addListener('place_changed', function() {\n    var place = autocomplete.getPlace();\n\n    if (!place.place_id) {\n      window.alert('Please select an option from the dropdown list.');\n      return;\n    }\n    if (mode === 'ORIG') {\n      me.originPlaceId = place.place_id;\n    } else {\n      me.destinationPlaceId = place.place_id;\n    }\n    me.route();\n  });\n};\n\nAutocompleteDirectionsHandler.prototype.route = function() {\n  if (!this.originPlaceId || !this.destinationPlaceId) {\n    return;\n  }\n  var me = this;\n\n  this.directionsService.route(\n      {\n        origin: {'placeId': this.originPlaceId},\n        destination: {'placeId': this.destinationPlaceId},\n        travelMode: this.travelMode\n      },\n      function(response, status) {\n        if (status === 'OK') {\n          me.directionsRenderer.setDirections(response);\n        } else {\n          window.alert('Directions request failed due to ' + status);\n        }\n      });\n};\n</script>\n\n<div id=\"map\"></div>\n<!-- Replace the value of the key parameter with your own API key. -->\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDHFx21DUmGzak8iDuNrkh15C_gKB0_41w&libraries=places&callback=initMap\"\n        async defer></script>\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":440,"y":300,"wires":[[]]},{"id":"3797d72c.cc83d8","type":"ui_template","z":"e9b0ec89.58cc7","group":"b15a41e8.9efe8","name":"BusStand","order":0,"width":"8","height":"13","format":"<html>\n<style>\n    /* Always set the map height explicitly to define the size of the div\n * element that contains the map. */\n#map {\n  height: 100%;\n}\n/* Optional: Makes the sample page fill the window. */\nhtml, body {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n#right-panel {\n  font-family: Arial, Helvetica, sans-serif;\n  position: absolute;\n  right: 5px;\n  top: 70%;\n  margin-top: -195px;\n  height: 320px;\n  width: 180px;\n  padding: 5px;\n  z-index: 5;\n  border: 1px solid #999;\n  background: #fff;\n  color:black;\n}\n\n#right-panel select, #right-panel input {\n  font-size: 15px;\n}\n\n#right-panel select {\n  width: 100%;\n}\n\n#right-panel i {\n  font-size: 12px;\n}\n#right-panel {\n  font-family: Arial, Helvetica, sans-serif;\n  position: absolute;\n  right: 5px;\n  top: 60%;\n  margin-top: -195px;\n  height: 330px;\n  width: 200px;\n  padding: 5px;\n  z-index: 5;\n  border: 1px solid #999;\n  background: #fff;\n}\nh2 {\n  font-size: 22px;\n  margin: 0 0 5px 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  height: 271px;\n  width: 200px;\n  overflow-y: scroll;\n}\nli {\n  background-color: #f1f1f1;\n  padding: 10px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\nli:nth-child(odd) {\n  background-color: #fcfcfc;\n}\n#more {\n  width: 100%;\n  margin: 5px 0 0 0;\n}\n</style>\n<script>\n    var lati;\nvar lon;\nvar map;\nvar x = document.getElementById(\"demo\");\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  } else { \n    x.innerHTML = \"Geolocation is not supported by this browser.\";\n  }\n}\n  \n\nfunction showPosition(position) {\n   lati= position.coords.latitude; \n   lon= position.coords.longitude;\n   initMap();\n}\n\nfunction initMap() {\n  // Create the map.\n  var x = lati;\n  var y=lon;\n  var pyrmont = {lat: x, lng: y};\n  map = new google.maps.Map(document.getElementById('map'), {\n    center: pyrmont,\n    zoom: 17\n  });\n\n  // Create the places service.\n  var service = new google.maps.places.PlacesService(map);\n  var getNextPage = null;\n  var moreButton = document.getElementById('more');\n  moreButton.onclick = function() {\n    moreButton.disabled = true;\n    if (getNextPage) getNextPage();\n  };\n\n  // Perform a nearby search.\n  service.nearbySearch(\n      {location: pyrmont, radius: 3000, type: ['transit_station']},\n      function(results, status, pagination) {\n        if (status !== 'OK') return;\n\n        createMarkers(results);\n        moreButton.disabled = !pagination.hasNextPage;\n        getNextPage = pagination.hasNextPage && function() {\n          pagination.nextPage();\n        };\n      });\ninit();}\n\nfunction createMarkers(places) {\n  var bounds = new google.maps.LatLngBounds();\n  var placesList = document.getElementById('places');\n\n  for (var i = 0, place; place = places[i]; i++) {\n    var image = {\n      url: \"http://visit-vallarta.com/wp-content/uploads/2014/03/Bus-Stop-Sign.png\",\n      size: new google.maps.Size(71, 71),\n      origin: new google.maps.Point(0, 0),\n      anchor: new google.maps.Point(17, 34),\n      scaledSize: new google.maps.Size(25, 25)\n    };\n\n    var marker = new google.maps.Marker({\n        \n      map: map,\n      icon:image,\n      title: place.name,\n      position: place.geometry.location\n    });\n\n    var li = document.createElement('li');\n    li.textContent = place.name;\n    placesList.appendChild(li);\n\n    bounds.extend(place.geometry.location);\n  }\n  map.fitBounds(bounds);\n}\n\n\n</script>\n<body>\n\n<p><font color='#0ECFD5'>Click the button to get nearby Bus stops.</font></p>\n\n<button onclick=\"getLocation()\">click here</button>\n\n<p id=\"demo\"></p>\n\n<div id=\"map\"></div>\n<div id=\"right-panel\">\n  <h2><font color='#DD0E42'>Results</font></h2>\n  <ul id=\"places\"></ul>\n  <button id=\"more\">More results</button>\n</div>\n<!-- Replace the value of the key parameter with your own API key. -->\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDHFx21DUmGzak8iDuNrkh15C_gKB0_41w&libraries=places&callback=initMap\" async defer></script>\n<script>\n \nconst createMap = ({ lat, lng }) => {\n  return new google.maps.Map(document.getElementById('map'), {\n    center: { lat, lng },\n    zoom: 10\n  });\n};\nconst createMarker = ({ map, position }) => {\n  return new google.maps.Marker({ map, position });\n};\n\n/**\n * Track the user location.\n * @param {Object} onSuccess\n * @param {Object} [onError]\n * @return {number}\n */\nconst trackLocation = ({ onSuccess, onError = () => { } }) => {\n  if ('geolocation' in navigator === false) {\n    return onError(new Error('Geolocation is not supported by your browser.'));\n  }\n\n  return navigator.geolocation.watchPosition(onSuccess, onError, {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0\n  });\n};\n\n/**\n * Get position error message from the given error code.\n * @param {number} code\n * @return {String}\n */\nconst getPositionErrorMessage = code => {\n  switch (code) {\n    case 1:\n      return 'Permission denied.';\n    case 2:\n      return 'Position unavailable.';\n    case 3:\n      return 'Timeout reached.';\n  }\n}\n\n/**\n * Initialize the application.\n * Automatically called by the google maps API once it's loaded.\n*/\nfunction init() {\n     \n  const initialPosition = { lat: 59.32, lng: 17.84 };\n//   const map = createMap(initialPosition);\n  const marker = createMarker({ map, position: initialPosition });\n  const $info = document.getElementById('info');\n\n  let watchId = trackLocation({\n    onSuccess: ({ coords: { latitude: lat, longitude: lng } }) => {\n      marker.setPosition({ lat, lng });\n      map.panTo({ lat, lng });\n      $info.textContent = `Lat: ${lat.toFixed(5)} Lng: ${lng.toFixed(5)}`;\n      $info.classList.remove('error');\n    },\n    onError: err => {\n      console.log($info);\n      $info.textContent = `Error: ${err.message || getPositionErrorMessage(err.code)}`;\n      $info.classList.add('error');\n    }\n  });\n}\n</script>\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":640,"y":40,"wires":[[]]},{"id":"23e4442e.f0a32c","type":"ui_template","z":"e9b0ec89.58cc7","group":"dc4e374c.3c2668","name":"Pharmacy","order":5,"width":"8","height":"13","format":"<html>\n<style>\n    /* Always set the map height explicitly to define the size of the div\n * element that contains the map. */\n#map {\n  height: 100%;\n}\n/* Optional: Makes the sample page fill the window. */\nhtml, body {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n#right-panel {\n  font-family: Arial, Helvetica, sans-serif;\n  position: absolute;\n  right: 5px;\n  top: 70%;\n  margin-top: -195px;\n  height: 320px;\n  width: 180px;\n  padding: 5px;\n  z-index: 5;\n  border: 1px solid #999;\n  background: #fff;\n  color:black;\n}\n\n#right-panel select, #right-panel input {\n  font-size: 15px;\n}\n\n#right-panel select {\n  width: 100%;\n}\n\n#right-panel i {\n  font-size: 12px;\n}\n#right-panel {\n  font-family: Arial, Helvetica, sans-serif;\n  position: absolute;\n  right: 5px;\n  top: 60%;\n  margin-top: -195px;\n  height: 330px;\n  width: 200px;\n  padding: 5px;\n  z-index: 5;\n  border: 1px solid #999;\n  background: #fff;\n}\nh2 {\n  font-size: 22px;\n  margin: 0 0 5px 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  height: 271px;\n  width: 200px;\n  overflow-y: scroll;\n}\nli {\n  background-color: #f1f1f1;\n  padding: 10px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\nli:nth-child(odd) {\n  background-color: #fcfcfc;\n}\n#more {\n  width: 100%;\n  margin: 5px 0 0 0;\n}\n</style>\n<script>\n    var lati;\nvar lon;\nvar map;\nvar x = document.getElementById(\"demo\");\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  } else { \n    x.innerHTML = \"Geolocation is not supported by this browser.\";\n  }\n}\n  \n\nfunction showPosition(position) {\n   lati= position.coords.latitude; \n   lon= position.coords.longitude;\n   initMap();\n}\n\nfunction initMap() {\n  // Create the map.\n  var x = lati;\n  var y=lon;\n  var pyrmont = {lat: x, lng: y};\n  map = new google.maps.Map(document.getElementById('map'), {\n    center: pyrmont,\n    zoom: 17\n  });\n\n  // Create the places service.\n  var service = new google.maps.places.PlacesService(map);\n  var getNextPage = null;\n  var moreButton = document.getElementById('more');\n  moreButton.onclick = function() {\n    moreButton.disabled = true;\n    if (getNextPage) getNextPage();\n  };\n\n  // Perform a nearby search.\n  service.nearbySearch(\n      {location: pyrmont, radius: 500, type: ['pharmacy']},\n      function(results, status, pagination) {\n        if (status !== 'OK') return;\n\n        createMarkers(results);\n        moreButton.disabled = !pagination.hasNextPage;\n        getNextPage = pagination.hasNextPage && function() {\n          pagination.nextPage();\n        };\n      });\ninit();}\n\nfunction createMarkers(places) {\n  var bounds = new google.maps.LatLngBounds();\n  var placesList = document.getElementById('places');\n\n  for (var i = 0, place; place = places[i]; i++) {\n    var image = {\n      url: \"https://lh5.ggpht.com/2FRD3U4FPwtH3njnG7nAXp2k8YzGuzQYAjMJ4_o4DiDnDGgEF3MOSQ83nR3IiT9Rh6hl=w170\",\n      size: new google.maps.Size(71, 71),\n      origin: new google.maps.Point(0, 0),\n      anchor: new google.maps.Point(17, 34),\n      scaledSize: new google.maps.Size(25, 25)\n    };\n\n    var marker = new google.maps.Marker({\n      map: map,\n      icon: image,\n      title: place.name,\n      position: place.geometry.location\n    });\n\n    var li = document.createElement('li');\n    li.textContent = place.name;\n    placesList.appendChild(li);\n\n    bounds.extend(place.geometry.location);\n  }\n  map.fitBounds(bounds);\n}\n\n\n</script>\n<body>\n\n<p><font color='#0ECFD5'>Click the button to get nearby Pharmacy.</font></p>\n\n<button onclick=\"getLocation()\">click here</button>\n\n<p id=\"demo\"></p>\n\n<div id=\"map\"></div>\n<div id=\"right-panel\">\n  <h2><font color='#DD0E42'>Results</font></h2>\n  <ul id=\"places\"></ul>\n  <button id=\"more\">More results</button>\n</div>\n<!-- Replace the value of the key parameter with your own API key. -->\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDHFx21DUmGzak8iDuNrkh15C_gKB0_41w&libraries=places&callback=initMap\" async defer></script>\n<script>\n \nconst createMap = ({ lat, lng }) => {\n  return new google.maps.Map(document.getElementById('map'), {\n    center: { lat, lng },\n    zoom: 10\n  });\n};\nconst createMarker = ({ map, position }) => {\n  return new google.maps.Marker({ map, position });\n};\n\n/**\n * Track the user location.\n * @param {Object} onSuccess\n * @param {Object} [onError]\n * @return {number}\n */\nconst trackLocation = ({ onSuccess, onError = () => { } }) => {\n  if ('geolocation' in navigator === false) {\n    return onError(new Error('Geolocation is not supported by your browser.'));\n  }\n\n  return navigator.geolocation.watchPosition(onSuccess, onError, {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0\n  });\n};\n\n/**\n * Get position error message from the given error code.\n * @param {number} code\n * @return {String}\n */\nconst getPositionErrorMessage = code => {\n  switch (code) {\n    case 1:\n      return 'Permission denied.';\n    case 2:\n      return 'Position unavailable.';\n    case 3:\n      return 'Timeout reached.';\n  }\n}\n\n/**\n * Initialize the application.\n * Automatically called by the google maps API once it's loaded.\n*/\nfunction init() {\n     \n  const initialPosition = { lat: 59.32, lng: 17.84 };\n//   const map = createMap(initialPosition);\n  const marker = createMarker({ map, position: initialPosition });\n  const $info = document.getElementById('info');\n\n  let watchId = trackLocation({\n    onSuccess: ({ coords: { latitude: lat, longitude: lng } }) => {\n      marker.setPosition({ lat, lng });\n      map.panTo({ lat, lng });\n      $info.textContent = `Lat: ${lat.toFixed(5)} Lng: ${lng.toFixed(5)}`;\n      $info.classList.remove('error');\n    },\n    onError: err => {\n      console.log($info);\n      $info.textContent = `Error: ${err.message || getPositionErrorMessage(err.code)}`;\n      $info.classList.add('error');\n    }\n  });\n}\n</script>\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":560,"y":240,"wires":[[]]},{"id":"7c888b01.5f3ad4","type":"ui_group","z":"","name":"Get Nearby Hospitals located on map here ......","tab":"553ab13b.e4733","order":12,"disp":true,"width":"8","collapse":false},{"id":"140907ca.3b0dc8","type":"ui_group","z":"","name":"WELCOME","tab":"4af82e55.3a8f","order":13,"disp":false,"width":"8","collapse":false},{"id":"1c41e47f.2d9bdc","type":"ui_group","z":"","name":"Give Your Details","tab":"53039bc5.7efd14","order":1,"disp":true,"width":"23","collapse":false},{"id":"6ecdbb2a.a34d24","type":"ui_group","z":"","name":"Get Cycle","tab":"c6eb3165.46809","order":1,"disp":true,"width":"8","collapse":false},{"id":"cac3ba20.c7ac98","type":"ui_group","z":"","name":" directions on the map ","tab":"c585634a.34734","order":13,"disp":true,"width":"8","collapse":false},{"id":"b15a41e8.9efe8","type":"ui_group","z":"","name":"get nearby bus stands","tab":"53ccca30.b77ed4","order":1,"disp":true,"width":"8","collapse":false},{"id":"dc4e374c.3c2668","type":"ui_group","z":"","name":"Get nearby pharmacies","tab":"7fff77a2.6b4ae8","order":1,"disp":true,"width":"8","collapse":false},{"id":"553ab13b.e4733","type":"ui_tab","z":"","name":"Hospital","icon":"dashboard","order":17,"disabled":false,"hidden":false},{"id":"4af82e55.3a8f","type":"ui_tab","z":"","name":"Home","icon":"dashboard","order":16,"disabled":false,"hidden":false},{"id":"53039bc5.7efd14","type":"ui_tab","z":"","name":"Cycle Registration","icon":"dashboard","order":22,"disabled":false,"hidden":false},{"id":"c6eb3165.46809","type":"ui_tab","z":"","name":"Pick a Cycle","icon":"dashboard","order":29,"disabled":false,"hidden":false},{"id":"c585634a.34734","type":"ui_tab","z":"","name":"direction","icon":"dashboard","order":18,"disabled":false,"hidden":false},{"id":"53ccca30.b77ed4","type":"ui_tab","z":"","name":"bus stand","icon":"dashboard","order":26,"disabled":false,"hidden":false},{"id":"7fff77a2.6b4ae8","type":"ui_tab","z":"","name":"PHARMACY","icon":"dashboard","order":21,"disabled":false,"hidden":false}]